name: Server Deploy to EC2

on:
  # pull_request:
  #   types: [closed]
  #   branches:
  #     - main
  #   paths:
  #     - 'beat-forge/**'
  push:
    branches:
      - "main"

jobs:
  deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: List workspace contents and run Gradle build
      run: |
        (cd ./beat-forge && ./gradlew clean build)


    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./beat-forge
        push: true
        tags: imizik/forge-server:latest
        build-args: OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Get Runner Public IP
      id: get_runner_ip
      uses: haythem/public-ip@v1.2

    - name: Update Security Group
      run: |
        aws ec2 authorize-security-group-ingress --group-id sg-0fd866d758fbd8e29 --protocol tcp --port 22 --cidr ${{ steps.get_runner_ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-west-2

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull imizik/forge-server:latest
          docker stop forge-server
          docker rm forge-server
          docker run -d -p 8080:8080 --name forge-server imizik/forge-server:latest

    - name: Revoke Security Group Access
      run: |
        aws ec2 revoke-security-group-ingress --group-id sg-0fd866d758fbd8e29 --protocol tcp --port 22 --cidr ${{ steps.get_runner_ip.outputs.ipv4 }}/32
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-west-2
